services:

  mongo1:
    image: mongo:8.0
    container_name: mongo1
    ports:
      - "27017:27017"
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: example
    command: --replSet rs0
    volumes:
      - mongo1_data:/data/db
    networks:
      - mongo-cluster

  mongo1_s1:
    image: mongo:8.0
    container_name: mongo1_s1
    ports:
      - "27018:27017"
    command: --replSet rs0
    volumes:
      - mongo1_s1_data:/data/db
    depends_on:
      - mongo1
    networks:
      - mongo-cluster
  
  mongo1_s2:
    image: mongo:8.0
    container_name: mongo1_s2
    ports:
      - "27019:27017"
    command: --replSet rs0
    volumes:
      - mongo1_s2_data:/data/db
    depends_on:
      - mongo1
    networks:
      - mongo-cluster

  setup:
    image: mongo:8.0
    container_name: setup
    depends_on:
      - mongo1
      - mongo1_s1
      - mongo1_s2
    networks:
      - mongo-cluster
    entrypoint: >
      bash -c "
      sleep 40;
      mongosh --host mongo1 --eval 'rs.initiate({
        _id: \"rs0\",
        members: [
          { _id: 0, host: \"mongo1:27017\", priority: 2 },
          { _id: 1, host: \"mongo1_s1:27017\", priority: 1 },
          { _id: 2, host: \"mongo1_s2:27017\", priority: 1 }
        ]
      })';
      "

networks:
  mongo-cluster:
    driver: bridge
    external: true
  kafka-network:
    driver: bridge
    external: true
    
volumes:
  mongo1_data:
  mongo1_s1_data:
  mongo1_s2_data: